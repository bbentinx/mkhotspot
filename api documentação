# üìã API de Leads - Navegnet - Documenta√ß√£o Completa

## üèóÔ∏è **Arquitetura da API**

A API de leads da Navegnet √© constru√≠da em **Next.js 14** com **Prisma ORM** e possui **3 endpoints principais** para diferentes cen√°rios de uso:

---

## üåê **Endpoint 1: POST /api/leads (Acesso Normal)**

**M√©todo:** `POST`  
**Content-Type:** `application/json`  
**Uso:** Aplica√ß√µes web, formul√°rios normais

### **Dados Obrigat√≥rios:**
```json
{
  "name": "string",           // Nome completo do usu√°rio
  "whatsapp": "string",       // N√∫mero do WhatsApp
  "address": "string",        // Endere√ßo completo
  "city": "string",           // Cidade
  "partnerId": "string"       // ID do parceiro
}
```

### **Dados Opcionais (Verifica√ß√£o Social):**
```json
{
  "verified": "boolean",              // Verifica√ß√£o geral
  "instagram_verified": "boolean",    // Seguiu no Instagram
  "google_verified": "boolean",       // Avaliou no Google
  "social_status": "string",          // Status das a√ß√µes sociais
  "actions_completed": "array",       // Lista de a√ß√µes completadas
  "social_score": "number",           // Pontua√ß√£o (0-2)
  "lead_status": "string",            // Status do lead
  "completion_percentage": "number",  // Porcentagem de conclus√£o
  "social_action_type": "string",     // Tipo de a√ß√£o social
  "social_action_status": "string",   // Status da a√ß√£o social
  "update_type": "string",            // Tipo de atualiza√ß√£o
  "is_update": "boolean",             // √â uma atualiza√ß√£o?
  "lead_identifier": "string",        // Identificador √∫nico (WhatsApp)
  "session_id": "string"              // ID da sess√£o
}
```

---

## üåê **Endpoint 2: GET /api/leads (Hotspot Mikrotik)**

**M√©todo:** `GET`  
**Uso:** Captive portal Mikrotik, fallback quando POST falha  
**Funcionamento:** Retorna imagem 1x1 transparente (PNG base64)

### **Par√¢metros de Query:**
```
?name=Jo√£o&whatsapp=11999999999&address=Rua A&city=SP&partnerId=hotspot-mk&verified=true&instagram_verified=true&google_verified=true
```

### **Caracter√≠sticas Especiais:**
- ‚úÖ **Sempre retorna sucesso** (imagem PNG)
- ‚úÖ **Cria parceiro automaticamente** se n√£o existir
- ‚úÖ **Funciona offline** (captive portal)
- ‚úÖ **Compat√≠vel com Mikrotik** (m√©todo GET)

---

## üîÑ **Endpoint 3: PATCH /api/leads/[id]/social (Atualiza√ß√£o Social)**

**M√©todo:** `PATCH`  
**Uso:** Atualizar verifica√ß√µes sociais de leads existentes  
**URL:** `/api/leads/{leadId}/social`

### **Dados Aceitos:**
```json
{
  "action": "instagram|google",       // A√ß√£o simples (legado)
  "instagram_verified": "boolean",    // Seguiu no Instagram
  "google_verified": "boolean",       // Avaliou no Google
  "verified": "boolean",              // Verifica√ß√£o geral
  "social_status": "string",          // Status social
  "lead_status": "string",            // Status do lead
  "social_score": "number",           // Pontua√ß√£o social
  "completion_percentage": "number"   // Porcentagem de conclus√£o
}
```

---

## üóÑÔ∏è **Mapeamento para o Banco de Dados**

### **Tabela: `Lead`**

| Campo Frontend | Campo Banco | Tipo | Descri√ß√£o |
|----------------|-------------|------|-----------|
| `name` | `name` | String | Nome completo |
| `whatsapp` | `whatsapp` | String | N√∫mero WhatsApp |
| `address` | `address` | String? | Endere√ßo |
| `city` | `city` | String? | Cidade |
| `instagram_verified` | `followedInstagram` | Boolean | Seguiu Instagram |
| `google_verified` | `ratedGoogle` | Boolean | Avaliou Google |
| `verified` | `completed` | Boolean | Lead completo |
| `social_status` | `status` | String | Status do lead |
| `partnerId` | `partnerId` | String | ID do parceiro |
| `source` | `source` | String | Origem do lead |

### **Campos Autom√°ticos:**
- `id`: CUID autom√°tico
- `createdAt`: Timestamp de cria√ß√£o
- `updatedAt`: Timestamp de atualiza√ß√£o
- `ipAddress`: IP do usu√°rio
- `userAgent`: User agent do navegador

---

## üîÑ **Fluxo de Funcionamento**

### **1. Cria√ß√£o de Lead:**
```
Frontend ‚Üí POST/GET ‚Üí API ‚Üí Prisma ‚Üí Banco ‚Üí Notifica√ß√£o Admin
```

### **2. Atualiza√ß√£o Social:**
```
Frontend ‚Üí PATCH ‚Üí API ‚Üí Prisma ‚Üí Banco ‚Üí Lead Atualizado
```

### **3. Fallback Autom√°tico:**
```
POST falha ‚Üí GET fallback ‚Üí Imagem PNG ‚Üí Lead criado
```

---

## üéØ **Casos de Uso**

### **Cen√°rio A: Formul√°rio Web Normal**
- **M√©todo:** POST com JSON
- **Dados:** Completos + verifica√ß√£o social
- **Resposta:** Lead criado com ID

### **Cen√°rio B: Captive Portal Mikrotik**
- **M√©todo:** GET com query params
- **Dados:** B√°sicos + verifica√ß√£o social
- **Resposta:** Imagem PNG (sucesso)

### **Cen√°rio C: Atualiza√ß√£o de Verifica√ß√£o**
- **M√©todo:** PATCH para lead existente
- **Dados:** Apenas campos de verifica√ß√£o
- **Resposta:** Lead atualizado

---

## üõ°Ô∏è **Valida√ß√µes e Seguran√ßa**

### **Valida√ß√µes Obrigat√≥rias:**
- ‚úÖ Nome, WhatsApp, Endere√ßo, Cidade
- ‚úÖ Parceiro deve existir e estar ativo
- ‚úÖ WhatsApp √∫nico por lead

### **Tratamento de Erros:**
- ‚ùå Dados obrigat√≥rios faltando ‚Üí 400 Bad Request
- ‚ùå Parceiro n√£o encontrado ‚Üí 404 Not Found
- ‚ùå Erro interno ‚Üí 500 Internal Server Error

### **Seguran√ßa:**
- üîí Valida√ß√£o de parceiro ativo
- üîí Sanitiza√ß√£o de dados de entrada
- üîí Logs detalhados para auditoria

---

## üìä **Exemplos de Uso**

### **Exemplo 1: Criar Lead Completo**
```bash
POST /api/leads
Content-Type: application/json

{
  "name": "Jo√£o Silva",
  "whatsapp": "11999999999",
  "address": "Rua das Flores, 123",
  "city": "S√£o Paulo",
  "partnerId": "parceiro-123",
  "instagram_verified": true,
  "google_verified": true,
  "verified": true
}
```

**Resposta:**
```json
{
  "id": "lead_abc123",
  "name": "Jo√£o Silva",
  "whatsapp": "11999999999",
  "address": "Rua das Flores, 123",
  "city": "S√£o Paulo",
  "partnerId": "parceiro-123",
  "followedInstagram": true,
  "ratedGoogle": true,
  "completed": true,
  "status": "completed",
  "createdAt": "2024-01-15T10:30:00Z"
}
```

### **Exemplo 2: Atualizar Verifica√ß√£o Social**
```bash
PATCH /api/leads/lead-456/social
Content-Type: application/json

{
  "instagram_verified": true,
  "google_verified": false,
  "social_status": "instagram_completed"
}
```

**Resposta:**
```json
{
  "id": "lead-456",
  "name": "Maria Santos",
  "followedInstagram": true,
  "ratedGoogle": false,
  "status": "instagram_completed",
  "updatedAt": "2024-01-15T11:00:00Z"
}
```

### **Exemplo 3: Hotspot Mikrotik**
```bash
GET /api/leads?name=Maria&whatsapp=11888888888&address=Rua B&city=SP&partnerId=hotspot-mk&instagram_verified=true
```

**Resposta:** Imagem PNG 1x1 transparente (sucesso)

---

## üîß **Configura√ß√£o T√©cnica**

### **Depend√™ncias:**
- **Next.js 14** - Framework da API
- **Prisma ORM** - Banco de dados
- **PostgreSQL** - Banco principal
- **Node.js** - Runtime

### **Vari√°veis de Ambiente:**
```env
DATABASE_URL="postgresql://usuario:senha@localhost:5432/navegnet"
NEXTAUTH_SECRET="chave-secreta-jwt"
NEXTAUTH_URL="https://navegnetparceiros.com.br"
```

### **Deploy:**
- **Vercel** - Hospedagem
- **GitHub** - Versionamento
- **Prisma** - Migrations autom√°ticas

---

## üìà **Monitoramento e Logs**

### **Logs Autom√°ticos:**
- üöÄ In√≠cio de cada requisi√ß√£o
- üìã Dados recebidos
- ‚úÖ Sucessos e IDs criados
- ‚ùå Erros e stack traces
- üîç Buscas por parceiros

### **M√©tricas:**
- Leads criados por fonte
- Taxa de sucesso por endpoint
- Tempo de resposta
- Erros por tipo

---

## üöÄ **Implementa√ß√£o no Banco**

### **1. Estrutura da Tabela Lead:**
```sql
CREATE TABLE "Lead" (
  "id" TEXT NOT NULL,
  "name" TEXT NOT NULL,
  "whatsapp" TEXT NOT NULL,
  "address" TEXT,
  "city" TEXT,
  "followedInstagram" BOOLEAN NOT NULL DEFAULT false,
  "ratedGoogle" BOOLEAN NOT NULL DEFAULT false,
  "completed" BOOLEAN NOT NULL DEFAULT false,
  "ipAddress" TEXT,
  "userAgent" TEXT,
  "createdAt" TIMESTAMP(3) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  "partnerId" TEXT NOT NULL,
  "email" TEXT,
  "notes" TEXT,
  "priority" TEXT NOT NULL DEFAULT 'medium',
  "source" TEXT NOT NULL DEFAULT 'qr_code',
  "status" TEXT NOT NULL DEFAULT 'new',
  "updatedAt" TIMESTAMP(3) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  
  CONSTRAINT "Lead_pkey" PRIMARY KEY ("id")
);
```

### **2. √çndices Recomendados:**
```sql
CREATE INDEX "Lead_whatsapp_idx" ON "Lead"("whatsapp");
CREATE INDEX "Lead_partnerId_idx" ON "Lead"("partnerId");
CREATE INDEX "Lead_createdAt_idx" ON "Lead"("createdAt");
CREATE INDEX "Lead_status_idx" ON "Lead"("status");
CREATE INDEX "Lead_source_idx" ON "Lead"("source");
```

### **3. Relacionamentos:**
```sql
-- Lead pertence a um Partner
ALTER TABLE "Lead" ADD CONSTRAINT "Lead_partnerId_fkey" 
FOREIGN KEY ("partnerId") REFERENCES "Partner"("id") ON DELETE RESTRICT ON UPDATE CASCADE;
```

---

## üîç **Testes e Valida√ß√£o**

### **1. Teste de Cria√ß√£o:**
```bash
curl -X POST https://navegnetparceiros.com.br/api/leads \
  -H "Content-Type: application/json" \
  -d '{
    "name": "Teste API",
    "whatsapp": "11977777777",
    "address": "Rua Teste",
    "city": "SP",
    "partnerId": "teste-123"
  }'
```

### **2. Teste de Atualiza√ß√£o:**
```bash
curl -X PATCH https://navegnetparceiros.com.br/api/leads/LEAD_ID/social \
  -H "Content-Type: application/json" \
  -d '{
    "instagram_verified": true
  }'
```

### **3. Teste de Hotspot:**
```bash
curl "https://navegnetparceiros.com.br/api/leads?name=Teste&whatsapp=11966666666&address=Rua A&city=SP&partnerId=hotspot-mk"
```

---

## üìù **Notas de Implementa√ß√£o**

### **1. Compatibilidade:**
- ‚úÖ **Campos legados** mantidos para compatibilidade
- ‚úÖ **Fallbacks autom√°ticos** para diferentes cen√°rios
- ‚úÖ **M√∫ltiplos formatos** de entrada (JSON, Form, Query)

### **2. Performance:**
- üöÄ **Cria√ß√£o autom√°tica** de parceiros
- üöÄ **√çndices otimizados** no banco
- üöÄ **Logs estruturados** para monitoramento

### **3. Escalabilidade:**
- üìà **Suporte a m√∫ltiplos** parceiros
- üìà **Sistema de notifica√ß√µes** para admins
- üìà **Auditoria completa** de todas as opera√ß√µes

---

## üÜò **Suporte e Contato**

### **Para D√∫vidas T√©cnicas:**
- üìß Email: suporte@navegnet.com.br
- üì± WhatsApp: (11) 99999-9999
- üåê Site: https://navegnetparceiros.com.br

### **Documenta√ß√£o Adicional:**
- üìö Prisma Docs: https://www.prisma.io/docs
- üìö Next.js API: https://nextjs.org/docs/api-routes
- üìö PostgreSQL: https://www.postgresql.org/docs

---

## üìÑ **Vers√£o e Hist√≥rico**

**Vers√£o:** 1.0.0  
**Data:** Janeiro 2024  
**Autor:** Equipe Navegnet  
**√öltima Atualiza√ß√£o:** 15/01/2024

### **Changelog:**
- ‚úÖ **v1.0.0** - Implementa√ß√£o inicial da API
- ‚úÖ **v1.1.0** - Adi√ß√£o de campos de verifica√ß√£o social
- ‚úÖ **v1.2.0** - Suporte a hotspot Mikrotik
- ‚úÖ **v1.3.0** - Endpoint PATCH para atualiza√ß√µes sociais

---

*Esta documenta√ß√£o fornece uma vis√£o completa da API para implementa√ß√£o e manuten√ß√£o por outros analistas.* üéØ

